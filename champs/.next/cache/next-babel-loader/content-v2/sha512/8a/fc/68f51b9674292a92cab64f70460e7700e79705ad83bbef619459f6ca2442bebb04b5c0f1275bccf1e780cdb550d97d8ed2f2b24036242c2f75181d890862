{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\moren\\\\OneDrive\\\\Documenten\\\\League of Legends\\\\Coding\\\\LOL-API\\\\pages\\\\match\\\\[match_id].js\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { useEffect, useState } from 'react';\nexport var __N_SSP = true;\nexport default function Match(_ref) {\n  var _this = this;\n\n  var match = _ref.match,\n      timeline = _ref.timeline,\n      champions = _ref.champions;\n  var participants = [];\n\n  if (match !== null && match !== void 0 && match.participantIdentities) {\n    var _iterator = _createForOfIteratorHelper(match === null || match === void 0 ? void 0 : match.participantIdentities),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var participant = _step.value;\n        participants[participant.participantId] = participant.player.summonerName;\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"participants\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(participants, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(match, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"timeline\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), (timeline === null || timeline === void 0 ? void 0 : timeline.frames) && timeline.frames.map(function (frame) {\n      console.log(frame);\n      var personFrames = frame.participantFrames;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timestamp\",\n          children: frame.timestamp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"personFramescontainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"name\",\n              children: \"Naam\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"gold\",\n              children: \"Gold\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"totalgold\",\n              children: \"Total gold\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"level\",\n              children: \"Level\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"exp\",\n              children: \"XP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"lane-cs\",\n              children: \"Lane cs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"jungle-cs\",\n              children: \"Jungle cs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, _this), personFrames && Object.values(personFrames).map(function (item) {\n            console.log('personfrmae', item);\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"item\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"name\",\n                  children: participants && participants[item === null || item === void 0 ? void 0 : item.participantId]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"gold\",\n                  children: item === null || item === void 0 ? void 0 : item.currentGold\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"totalgold\",\n                  children: item === null || item === void 0 ? void 0 : item.totalGold\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"level\",\n                  children: item === null || item === void 0 ? void 0 : item.level\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"xp\",\n                  children: item === null || item === void 0 ? void 0 : item.xp\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"lane-cs\",\n                  children: item === null || item === void 0 ? void 0 : item.minionsKilled\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"jungle-cs\",\n                  children: item === null || item === void 0 ? void 0 : item.jungleMinionsKilled\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 16\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(timeline, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = Match;\n\nvar _c;\n\n$RefreshReg$(_c, \"Match\");","map":{"version":3,"sources":["C:/Users/moren/OneDrive/Documenten/League of Legends/Coding/LOL-API/pages/match/[match_id].js"],"names":["useEffect","useState","Match","match","timeline","champions","participants","participantIdentities","participant","participantId","player","summonerName","JSON","stringify","frames","map","frame","console","log","personFrames","participantFrames","timestamp","Object","values","item","currentGold","totalGold","level","xp","minionsKilled","jungleMinionsKilled"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport { Kayn, REGIONS } from 'kayn'\n\n\nexport default function Match({ match, timeline, champions }) {\n  let participants = [];\n  if (match?.participantIdentities) {\n    for (const participant of match?.participantIdentities) {\n      participants[participant.participantId] = participant.player.summonerName;\n    }\n  }\n\n  return (\n    <>\n      <h4>participants</h4>\n      <pre>{JSON.stringify(participants, null, 2)}</pre>\n      <h4>match</h4>\n      <pre>{JSON.stringify(match, null, 2)}</pre>\n      <h4>timeline</h4>\n      {timeline?.frames && timeline.frames.map((frame) => {\n        console.log(frame);\n        const personFrames = frame.participantFrames;\n        return <div>\n          <div className=\"timestamp\">\n            {frame.timestamp}\n          </div>\n          <div className=\"personFramescontainer\">\n            <div className=\"header\">\n              <div className=\"name\">Naam</div>\n              <div className=\"gold\">Gold</div>\n              <div className=\"totalgold\">Total gold</div>\n              <div className=\"level\">Level</div>\n              <div className=\"exp\">XP</div>\n              <div className=\"lane-cs\">Lane cs</div>\n              <div className=\"jungle-cs\">Jungle cs</div>\n            </div>\n            {personFrames && Object.values(personFrames).map((item) => {\n              console.log('personfrmae', item);\n              return <>\n                <div className=\"item\">\n                  <div className=\"name\">{participants && participants[item?.participantId]}</div>\n                  <div className=\"gold\">{item?.currentGold}</div>\n                  <div className=\"totalgold\">{item?.totalGold}</div>\n                  <div className=\"level\">{item?.level}</div>\n                  <div className=\"xp\">{item?.xp}</div>\n                  <div className=\"lane-cs\">{item?.minionsKilled}</div>\n                  <div className=\"jungle-cs\">{item?.jungleMinionsKilled}</div>\n                </div>\n              </>\n            })}\n          </div>\n        </div>\n\n      })}\n      <pre>{JSON.stringify(timeline, null, 2)}</pre>\n\n    </>\n  )\n}\n\nexport async function getServerSideProps({ params }) {\n  const riotAPI = \"RGAPI-b24d11af-219e-4c49-bda8-a4c174ac0e42\";\n  const kayn = Kayn(riotAPI)({\n    region: REGIONS.EUROPE_WEST,\n    debugOptions: {\n      isEnabled: true,\n      showKey: false,\n    },\n\n  })\n  const match_id = params.match_id;\n  let match = null;\n  let timeline = null;\n  if (match_id) {\n    match = await kayn.Match.get(match_id);\n    timeline = await kayn.Match.timeline(match_id);\n  }\n  const champions = await kayn.DDragon.Champion.list();\n  return {\n    props: { match, timeline, champions }, // will be passed to the page component as props\n  }\n}"]},"metadata":{},"sourceType":"module"}