{"ast":null,"code":"export async function getFromDatabase(url) {\n  try {\n    const response = await axios.get(\"localhost:3003/\" + url);\n    console.log(`fetch from url: ${url}`, response);\n    return response;\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport function twoDigits(n) {\n  return n > 9 ? \"\" + n : \"0\" + n;\n}\nexport function msToDate(ms) {\n  const matchDate = new Date(ms);\n  var year = matchDate.getFullYear();\n  var month = twoDigits(matchDate.getMonth());\n  var date = twoDigits(matchDate.getDate());\n  return date + '-' + month + '-' + year;\n}\nexport function msToTime(duration) {\n  var milliseconds = parseInt(duration % 1000 / 100),\n      seconds = Math.floor(duration / 1000 % 60),\n      minutes = Math.floor(duration / (1000 * 60) % 60),\n      hours = Math.floor(duration / (1000 * 60 * 60) % 24);\n  hours = hours < 10 ? \"0\" + hours : hours;\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\n  seconds = seconds < 10 ? \"0\" + seconds : seconds;\n  return hours + \":\" + minutes + \":\" + seconds + \".\" + milliseconds;\n}\nexport function msToDateTime(ms) {\n  return msToDate(ms) + \" \" + msToTime(ms);\n}","map":{"version":3,"sources":["C:/Users/moren/Bureaublad/Coding/LOL-API/site/methods/general_methods.js"],"names":["getFromDatabase","url","response","axios","get","console","log","error","twoDigits","n","msToDate","ms","matchDate","Date","year","getFullYear","month","getMonth","date","getDate","msToTime","duration","milliseconds","parseInt","seconds","Math","floor","minutes","hours","msToDateTime"],"mappings":"AAAA,OAAO,eAAeA,eAAf,CAA+BC,GAA/B,EAAoC;AACvC,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAN,CAAU,oBAAoBH,GAA9B,CAAvB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAa,mBAAkBL,GAAI,EAAnC,EAAsCC,QAAtC;AACA,WAAOA,QAAP;AACH,GAJD,CAIE,OAAOK,KAAP,EAAc;AACZF,IAAAA,OAAO,CAACE,KAAR,CAAcA,KAAd;AACH;AACJ;AAED,OAAO,SAASC,SAAT,CAAmBC,CAAnB,EAAsB;AACzB,SAAOA,CAAC,GAAG,CAAJ,GAAQ,KAAKA,CAAb,GAAiB,MAAMA,CAA9B;AACH;AAGD,OAAO,SAASC,QAAT,CAAkBC,EAAlB,EAAsB;AACzB,QAAMC,SAAS,GAAG,IAAIC,IAAJ,CAASF,EAAT,CAAlB;AACA,MAAIG,IAAI,GAAGF,SAAS,CAACG,WAAV,EAAX;AACA,MAAIC,KAAK,GAAGR,SAAS,CAACI,SAAS,CAACK,QAAV,EAAD,CAArB;AACA,MAAIC,IAAI,GAAGV,SAAS,CAACI,SAAS,CAACO,OAAV,EAAD,CAApB;AAEA,SAAOD,IAAI,GAAG,GAAP,GAAaF,KAAb,GAAqB,GAArB,GAA2BF,IAAlC;AACH;AACD,OAAO,SAASM,QAAT,CAAkBC,QAAlB,EAA4B;AAC/B,MAAIC,YAAY,GAAGC,QAAQ,CAAEF,QAAQ,GAAG,IAAZ,GAAoB,GAArB,CAA3B;AAAA,MACIG,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAYL,QAAQ,GAAG,IAAZ,GAAoB,EAA/B,CADd;AAAA,MAEIM,OAAO,GAAGF,IAAI,CAACC,KAAL,CAAYL,QAAQ,IAAI,OAAO,EAAX,CAAT,GAA2B,EAAtC,CAFd;AAAA,MAGIO,KAAK,GAAGH,IAAI,CAACC,KAAL,CAAYL,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAT,GAAgC,EAA3C,CAHZ;AAKAO,EAAAA,KAAK,GAAIA,KAAK,GAAG,EAAT,GAAe,MAAMA,KAArB,GAA6BA,KAArC;AACAD,EAAAA,OAAO,GAAIA,OAAO,GAAG,EAAX,GAAiB,MAAMA,OAAvB,GAAiCA,OAA3C;AACAH,EAAAA,OAAO,GAAIA,OAAO,GAAG,EAAX,GAAiB,MAAMA,OAAvB,GAAiCA,OAA3C;AAEA,SAAOI,KAAK,GAAG,GAAR,GAAcD,OAAd,GAAwB,GAAxB,GAA8BH,OAA9B,GAAwC,GAAxC,GAA8CF,YAArD;AACH;AACD,OAAO,SAASO,YAAT,CAAsBlB,EAAtB,EAA0B;AAC7B,SAAOD,QAAQ,CAACC,EAAD,CAAR,GAAe,GAAf,GAAqBS,QAAQ,CAACT,EAAD,CAApC;AACH","sourcesContent":["export async function getFromDatabase(url) {\r\n    try {\r\n        const response = await axios.get(\"localhost:3003/\" + url);\r\n        console.log(`fetch from url: ${url}`, response);\r\n        return response;\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\nexport function twoDigits(n) {\r\n    return n > 9 ? \"\" + n : \"0\" + n;\r\n}\r\n\r\n\r\nexport function msToDate(ms) {\r\n    const matchDate = new Date(ms);\r\n    var year = matchDate.getFullYear();\r\n    var month = twoDigits(matchDate.getMonth());\r\n    var date = twoDigits(matchDate.getDate());\r\n\r\n    return date + '-' + month + '-' + year;\r\n}\r\nexport function msToTime(duration) {\r\n    var milliseconds = parseInt((duration % 1000) / 100),\r\n        seconds = Math.floor((duration / 1000) % 60),\r\n        minutes = Math.floor((duration / (1000 * 60)) % 60),\r\n        hours = Math.floor((duration / (1000 * 60 * 60)) % 24);\r\n\r\n    hours = (hours < 10) ? \"0\" + hours : hours;\r\n    minutes = (minutes < 10) ? \"0\" + minutes : minutes;\r\n    seconds = (seconds < 10) ? \"0\" + seconds : seconds;\r\n\r\n    return hours + \":\" + minutes + \":\" + seconds + \".\" + milliseconds;\r\n}\r\nexport function msToDateTime(ms) {\r\n    return msToDate(ms) + \" \" + msToTime(ms);\r\n}"]},"metadata":{},"sourceType":"module"}