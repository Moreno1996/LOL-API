{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\moren\\\\OneDrive\\\\Documenten\\\\League of Legends\\\\Coding\\\\LOL-API\\\\pages\\\\index.js\";\nimport { useEffect, useState } from 'react';\nimport { Kayn, REGIONS } from 'kayn';\nexport default function Home({\n  user,\n  accountID,\n  matches,\n  firstMatch,\n  firsttimeline,\n  champions\n}) {\n  const {\n    0: init,\n    1: setInit\n  } = useState(false);\n  const {\n    0: data,\n    1: setData\n  } = useState(null);\n  const {\n    0: champArray,\n    1: setChamparray\n  } = useState(null);\n  useEffect(() => {\n    if (!init) {\n      setInit(true);\n\n      if (champions) {\n        const champData = champions.data;\n        let array = [];\n\n        for (const name in champData) {\n          const champ = champData[name];\n          const id = champ.key;\n          array[id] = champ;\n        }\n\n        setChamparray(array);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"user:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(user, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"firstMatch:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), (matches === null || matches === void 0 ? void 0 : matches.matches) && (matches === null || matches === void 0 ? void 0 : matches.matches.map((match, index) => {\n      console.log(match);\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this);\n    })), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(matches, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"accountID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(accountID, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\nexport async function getServerSideProps(context) {\n  const riotAPI = \"RGAPI-b24d11af-219e-4c49-bda8-a4c174ac0e42\";\n  let myError = false;\n  const kayn = Kayn(riotAPI)({\n    region: REGIONS.EUROPE_WEST,\n    debugOptions: {\n      isEnabled: true,\n      showKey: false\n    }\n  });\n  const summoner = await kayn.Summoner.by.name('MlDget');\n  const summonerId = summoner.accountId;\n  const matchlist = await kayn.Matchlist.by.accountID(\"n2vnLxcc2x-DMoIhdm0WMuraVVCFFEW_MpkD2D5-uEXLHfs\").region(REGIONS.EUROPE_WEST).query({\n    // season: 9,\n    queue: [420, 440]\n  });\n  let firstMatch = null;\n  let firsttimeline = null;\n\n  if (matchlist !== null && matchlist !== void 0 && matchlist.matches) {\n    firstMatch = await kayn.Match.get(matchlist.matches[0].gameId);\n    firsttimeline = await kayn.Match.timeline(matchlist.matches[0].gameId);\n  }\n\n  const champions = await kayn.DDragon.Champion.list();\n  return {\n    props: {\n      user: summoner,\n      accountID: summonerId,\n      matches: matchlist,\n      firstMatch,\n      firsttimeline,\n      champions\n    } // will be passed to the page component as props\n\n  };\n}","map":{"version":3,"sources":["C:/Users/moren/OneDrive/Documenten/League of Legends/Coding/LOL-API/pages/index.js"],"names":["useEffect","useState","Kayn","REGIONS","Home","user","accountID","matches","firstMatch","firsttimeline","champions","init","setInit","data","setData","champArray","setChamparray","champData","array","name","champ","id","key","JSON","stringify","map","match","index","console","log","getServerSideProps","context","riotAPI","myError","kayn","region","EUROPE_WEST","debugOptions","isEnabled","showKey","summoner","Summoner","by","summonerId","accountId","matchlist","Matchlist","query","queue","Match","get","gameId","timeline","DDragon","Champion","list","props"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport { Kayn, REGIONS } from 'kayn'\n\nexport default function Home({user,accountID,matches,firstMatch, firsttimeline,champions}) {\n  const [init, setInit] = useState(false);\n  const [data, setData] = useState(null);\n  const [champArray, setChamparray] = useState(null);\n  useEffect(()=>{\n    if(!init){\n      setInit(true);\n      if(champions){\n        const champData = champions.data;\n        let array = []\n        for (const  name in champData) {\n          const champ = champData[name];\n          const id = champ.key;\n          array[id]= champ;\n        }\n        setChamparray(array)\n     }\n    }\n  });\n\n  return (\n    <>\n\n    <h4>user:</h4>\n    <pre>{JSON.stringify(user,null, 2)}</pre>\n    <h4>firstMatch:</h4>\n    {/* <pre>{JSON.stringify(firstMatch,null, 2)}</pre>\n    <h4>firsttimeline:</h4>\n    <pre>{JSON.stringify(firsttimeline,null, 2)}</pre>\n    // <h4>matches</h4> */}\n    {matches?.matches && matches?.matches.map((match,index)=>{\n      console.log(match);\n      return (\n      <div>\n\n      </div>\n      )\n     \n    })}\n    <pre>{JSON.stringify(matches,null, 2)}</pre>\n    <h4>accountID</h4>\n    <pre>{JSON.stringify(accountID,null, 2)}</pre>\n  \n  </>\n  )\n}\n\nexport async function getServerSideProps(context) {\n  const riotAPI =\"RGAPI-b24d11af-219e-4c49-bda8-a4c174ac0e42\";\n  let myError = false;\n    const kayn = Kayn(riotAPI)({\n      region: REGIONS.EUROPE_WEST,\n      debugOptions: {\n        isEnabled: true,\n        showKey: false,\n    },\n      \n  })\n  const summoner = await kayn.Summoner.by.name('MlDget')\n  const summonerId = summoner.accountId;\n  const matchlist = await kayn.Matchlist.by.accountID(\"n2vnLxcc2x-DMoIhdm0WMuraVVCFFEW_MpkD2D5-uEXLHfs\")\n  .region(REGIONS.EUROPE_WEST)\n  .query({\n      // season: 9,\n      queue: [420, 440],\n  })\n  let firstMatch = null;\n  let firsttimeline = null;\n  if(matchlist?.matches){\n     firstMatch = await kayn.Match.get(matchlist.matches[0].gameId);\n     firsttimeline = await  kayn.Match.timeline(matchlist.matches[0].gameId);\n  }\n  const champions = await kayn.DDragon.Champion.list();\n  return {\n    props: {user:summoner, accountID:summonerId,matches:matchlist, firstMatch, firsttimeline, champions}, // will be passed to the page component as props\n  }\n}"]},"metadata":{},"sourceType":"module"}