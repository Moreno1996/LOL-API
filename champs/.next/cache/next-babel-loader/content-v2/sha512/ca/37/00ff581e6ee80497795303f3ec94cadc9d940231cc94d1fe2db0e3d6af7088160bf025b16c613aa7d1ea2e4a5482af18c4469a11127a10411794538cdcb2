{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\moren\\\\OneDrive\\\\Documenten\\\\League of Legends\\\\Coding\\\\LOL-API\\\\components\\\\mapCanvas.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useRef, useEffect } from 'react';\n\nconst MapCanvas = (_ref) => {\n  let {\n    location\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"location\"]);\n\n  console.log(location);\n  const canvasRef = useRef(null);\n\n  const drawPosition = (ctx, position) => {\n    console.log(\"drawPositionat\", position);\n    position = position.position;\n    const minX = 0;\n    const minY = 0;\n    const maxX = 14589;\n    const maxY = 14673;\n    const posX = (position.x - minX) / (maxX - minX);\n    const posY = (position.y - minY) / (maxY - minY);\n    console.log(\"position.x, posY = \", posX, posY);\n    console.log(\"poxX, posY = \", posX, posY);\n    const locX = ctx.canvas.width * posX;\n    const locY = ctx.canvas.height * posY;\n    console.log(\"create circle at \", locX, locY);\n    ctx.beginPath();\n    ctx.arc(locX, locY, 3, 0, 2 * Math.PI);\n    ctx.fill();\n  };\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    let frameCount = 0;\n    let animationFrameId; //Our draw came here\n\n    const render = () => {\n      frameCount++;\n      drawPosition(context, location[frameCount]);\n      animationFrameId = window.requestAnimationFrame(render);\n    };\n\n    render();\n    return () => {\n      window.cancelAnimationFrame(animationFrameId);\n    };\n  }, [drawPosition]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", _objectSpread({\n    ref: canvasRef\n  }, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 12\n  }, this);\n};\n\nexport default MapCanvas;","map":{"version":3,"sources":["C:/Users/moren/OneDrive/Documenten/League of Legends/Coding/LOL-API/components/mapCanvas.js"],"names":["React","useRef","useEffect","MapCanvas","location","props","console","log","canvasRef","drawPosition","ctx","position","minX","minY","maxX","maxY","posX","x","posY","y","locX","canvas","width","locY","height","beginPath","arc","Math","PI","fill","current","context","getContext","frameCount","animationFrameId","render","window","requestAnimationFrame","cancelAnimationFrame"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;;AAGA,MAAMC,SAAS,GAAG,UAA4B;AAAA,MAA3B;AAAEC,IAAAA;AAAF,GAA2B;AAAA,MAAZC,KAAY;;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,QAAMI,SAAS,GAAGP,MAAM,CAAC,IAAD,CAAxB;;AACA,QAAMQ,YAAY,GAAG,CAACC,GAAD,EAAMC,QAAN,KAAmB;AACpCL,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BI,QAA9B;AACAA,IAAAA,QAAQ,GAAGA,QAAQ,CAACA,QAApB;AACA,UAAMC,IAAI,GAAG,CAAb;AACA,UAAMC,IAAI,GAAG,CAAb;AACA,UAAMC,IAAI,GAAG,KAAb;AACA,UAAMC,IAAI,GAAG,KAAb;AAEA,UAAMC,IAAI,GAAG,CAACL,QAAQ,CAACM,CAAT,GAAaL,IAAd,KAAuBE,IAAI,GAAGF,IAA9B,CAAb;AACA,UAAMM,IAAI,GAAG,CAACP,QAAQ,CAACQ,CAAT,GAAaN,IAAd,KAAuBE,IAAI,GAAGF,IAA9B,CAAb;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCS,IAAnC,EAAyCE,IAAzC;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BS,IAA7B,EAAmCE,IAAnC;AAEA,UAAME,IAAI,GAAGV,GAAG,CAACW,MAAJ,CAAWC,KAAX,GAAmBN,IAAhC;AACA,UAAMO,IAAI,GAAGb,GAAG,CAACW,MAAJ,CAAWG,MAAX,GAAoBN,IAAjC;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCa,IAAjC,EAAuCG,IAAvC;AACAb,IAAAA,GAAG,CAACe,SAAJ;AACAf,IAAAA,GAAG,CAACgB,GAAJ,CAAQN,IAAR,EAAcG,IAAd,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,IAAII,IAAI,CAACC,EAAnC;AACAlB,IAAAA,GAAG,CAACmB,IAAJ;AACH,GAnBD;;AAsBA3B,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAMmB,MAAM,GAAGb,SAAS,CAACsB,OAAzB;AACA,UAAMC,OAAO,GAAGV,MAAM,CAACW,UAAP,CAAkB,IAAlB,CAAhB;AACA,QAAIC,UAAU,GAAG,CAAjB;AACA,QAAIC,gBAAJ,CALY,CAOZ;;AACA,UAAMC,MAAM,GAAG,MAAM;AACjBF,MAAAA,UAAU;AACVxB,MAAAA,YAAY,CAACsB,OAAD,EAAU3B,QAAQ,CAAC6B,UAAD,CAAlB,CAAZ;AACAC,MAAAA,gBAAgB,GAAGE,MAAM,CAACC,qBAAP,CAA6BF,MAA7B,CAAnB;AACH,KAJD;;AAKAA,IAAAA,MAAM;AAEN,WAAO,MAAM;AACTC,MAAAA,MAAM,CAACE,oBAAP,CAA4BJ,gBAA5B;AACH,KAFD;AAGH,GAlBQ,EAkBN,CAACzB,YAAD,CAlBM,CAAT;AAoBA,sBAAO;AAAQ,IAAA,GAAG,EAAED;AAAb,KAA4BH,KAA5B;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CA9CD;;AAgDA,eAAeF,SAAf","sourcesContent":["import React, { useRef, useEffect } from 'react'\r\n\r\n\r\nconst MapCanvas = ({ location, ...props }) => {\r\n    console.log(location);\r\n    const canvasRef = useRef(null)\r\n    const drawPosition = (ctx, position) => {\r\n        console.log(\"drawPositionat\", position)\r\n        position = position.position;\r\n        const minX = 0;\r\n        const minY = 0;\r\n        const maxX = 14589;\r\n        const maxY = 14673;\r\n\r\n        const posX = (position.x - minX) / (maxX - minX);\r\n        const posY = (position.y - minY) / (maxY - minY);\r\n        console.log(\"position.x, posY = \", posX, posY)\r\n        console.log(\"poxX, posY = \", posX, posY)\r\n\r\n        const locX = ctx.canvas.width * posX;\r\n        const locY = ctx.canvas.height * posY;\r\n        console.log(\"create circle at \", locX, locY);\r\n        ctx.beginPath();\r\n        ctx.arc(locX, locY, 3, 0, 2 * Math.PI);\r\n        ctx.fill();\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const canvas = canvasRef.current\r\n        const context = canvas.getContext('2d')\r\n        let frameCount = 0\r\n        let animationFrameId\r\n\r\n        //Our draw came here\r\n        const render = () => {\r\n            frameCount++\r\n            drawPosition(context, location[frameCount]);\r\n            animationFrameId = window.requestAnimationFrame(render)\r\n        }\r\n        render()\r\n\r\n        return () => {\r\n            window.cancelAnimationFrame(animationFrameId)\r\n        }\r\n    }, [drawPosition])\r\n\r\n    return <canvas ref={canvasRef} {...props} />\r\n}\r\n\r\nexport default MapCanvas;"]},"metadata":{},"sourceType":"module"}