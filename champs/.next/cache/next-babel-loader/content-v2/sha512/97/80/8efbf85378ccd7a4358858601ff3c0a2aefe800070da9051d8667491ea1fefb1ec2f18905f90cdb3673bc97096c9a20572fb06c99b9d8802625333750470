{"ast":null,"code":"import { msToDate, msToTime } from \"./general_methods\";\nexport var convertChampList = function convertChampList(champions) {\n  var champData = champions.data;\n  var array = [];\n\n  for (var name in champData) {\n    var champ = champData[name];\n    var id = champ.key;\n    array[id] = champ;\n  }\n\n  return array;\n};\nexport var getPosition = function getPosition(role, lane) {\n  console.log(\"getPosition\", role, lane);\n\n  if (role == \"DUO_SUPPORT\") {\n    return \"Support\";\n  }\n\n  ;\n\n  if (role == \"DUO_CARRY\") {\n    return \"ADC\";\n  }\n\n  switch (lane) {\n    case \"MID\":\n      return \"Mid\";\n\n    case \"MIDDLE\":\n      return \"Mid\";\n\n    case \"TOP\":\n      return \"Top\";\n\n    case \"JUNGLE\":\n      return \"JUNGLE \";\n\n    case \"BOTTOM\":\n      if (role == \"DUO_SUPPORT\") {\n        return \"Support\";\n      } else if (role = \"DUO_CARRY\") {\n        return \"Bottom\";\n      }\n\n      return \"Bottom-lane\";\n\n    case \"NONE\":\n      return \"Support\";\n\n    default:\n      return \"Unknown\";\n  }\n};\nexport var getType = function getType(type) {\n  switch (type) {\n    case 400:\n      return \"Draft Pick\";\n\n    case 420:\n      return \"Ranked solo\";\n\n    case 430:\n      return \"Blind Pick\";\n\n    case 440:\n      return \"Ranked flex\";\n\n    case 450:\n      return \"ARAM\";\n\n    case 700:\n      return \"Clash games\";\n\n    case 830:\n      return \"Co-op vs. AI Intro Bot\";\n\n    case 840:\n      return \"Co-op vs. AI Beginner Bot\";\n\n    case 850:\n      return \"Co-op vs. AI Intermediate Bot\";\n\n    case 900:\n      return \"URF\";\n\n    case 1300:\n      return \"Nexus Blitz\";\n\n    default:\n      return \"Unknown\";\n  }\n};\nexport var convertTimelineList = function convertTimelineList(list) {\n  console.log(\"list:\", list);\n  var interval = 10; //seconds\n\n  var msInterval = interval * 1000;\n  var result = [];\n\n  for (var i in list) {\n    var index = parseInt(i);\n\n    if (index != list.length - 1) {\n      var currentItem = list[index];\n      var nextItem = list[index + 1];\n      var startTime = parseInt(currentItem.timestamp);\n      var endTime = parseInt(nextItem.timestamp);\n      var iterations = Math.floor((endTime - startTime) / msInterval);\n      var difX = parseInt(nextItem.position.x) - parseInt(currentItem.position.x);\n      var difY = parseInt(nextItem.position.y) - parseInt(currentItem.position.y);\n\n      for (var a = 0; a < iterations; a++) {\n        var timestamp = Math.floor(startTime / msInterval) * msInterval + a * msInterval;\n        var position = {\n          x: parseInt(currentItem.position.x) + difX / iterations * a,\n          y: parseInt(currentItem.position.y) + difY / iterations * a\n        };\n        var time = msToTime(timestamp);\n\n        if (timestamp % msInterval == 0) {\n          result.push({\n            timestamp: timestamp,\n            location: location,\n            time: time\n          });\n        }\n      }\n    }\n  }\n\n  console.log(\"resultinglist\", result);\n  return result;\n};","map":{"version":3,"sources":["C:/Users/moren/OneDrive/Documenten/League of Legends/Coding/LOL-API/methods/league_methods.js"],"names":["msToDate","msToTime","convertChampList","champions","champData","data","array","name","champ","id","key","getPosition","role","lane","console","log","getType","type","convertTimelineList","list","interval","msInterval","result","i","index","parseInt","length","currentItem","nextItem","startTime","timestamp","endTime","iterations","Math","floor","difX","position","x","difY","y","a","time","push","location"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,QAAnB,QAAmC,mBAAnC;AAEA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,SAAD,EAAe;AAC3C,MAAMC,SAAS,GAAGD,SAAS,CAACE,IAA5B;AACA,MAAIC,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAMC,IAAX,IAAmBH,SAAnB,EAA8B;AAC1B,QAAMI,KAAK,GAAGJ,SAAS,CAACG,IAAD,CAAvB;AACA,QAAME,EAAE,GAAGD,KAAK,CAACE,GAAjB;AACAJ,IAAAA,KAAK,CAACG,EAAD,CAAL,GAAYD,KAAZ;AACH;;AACD,SAAOF,KAAP;AACH,CATM;AAWP,OAAO,IAAMK,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAOC,IAAP,EAAgB;AACvCC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,IAA3B,EAAiCC,IAAjC;;AACA,MAAID,IAAI,IAAI,aAAZ,EAA2B;AACvB,WAAO,SAAP;AACH;;AAAA;;AACD,MAAIA,IAAI,IAAI,WAAZ,EAAyB;AACrB,WAAO,KAAP;AACH;;AACD,UAAQC,IAAR;AACI,SAAK,KAAL;AACI,aAAO,KAAP;;AACJ,SAAK,QAAL;AACI,aAAO,KAAP;;AACJ,SAAK,KAAL;AACI,aAAO,KAAP;;AACJ,SAAK,QAAL;AACI,aAAO,SAAP;;AACJ,SAAK,QAAL;AACI,UAAID,IAAI,IAAI,aAAZ,EAA2B;AACvB,eAAO,SAAP;AACH,OAFD,MAGK,IAAIA,IAAI,GAAG,WAAX,EAAwB;AACzB,eAAO,QAAP;AACH;;AACD,aAAO,aAAP;;AACJ,SAAK,MAAL;AACI,aAAO,SAAP;;AACJ;AAAS,aAAO,SAAP;AAnBb;AAsBH,CA9BM;AA+BP,OAAO,IAAMI,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAU;AAE7B,UAAQA,IAAR;AACI,SAAK,GAAL;AACI,aAAO,YAAP;;AACJ,SAAK,GAAL;AACI,aAAO,aAAP;;AACJ,SAAK,GAAL;AACI,aAAO,YAAP;;AACJ,SAAK,GAAL;AACI,aAAO,aAAP;;AACJ,SAAK,GAAL;AACI,aAAO,MAAP;;AACJ,SAAK,GAAL;AACI,aAAO,aAAP;;AACJ,SAAK,GAAL;AACI,aAAO,wBAAP;;AACJ,SAAK,GAAL;AACI,aAAO,2BAAP;;AACJ,SAAK,GAAL;AACI,aAAO,+BAAP;;AACJ,SAAK,GAAL;AACI,aAAO,KAAP;;AACJ,SAAK,IAAL;AACI,aAAO,aAAP;;AAIJ;AAAS,aAAO,SAAP;AA1Bb;AA6BH,CA/BM;AAiCP,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,IAAD,EAAU;AACzCL,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBI,IAArB;AACA,MAAMC,QAAQ,GAAG,EAAjB,CAFyC,CAErB;;AACpB,MAAMC,UAAU,GAAGD,QAAQ,GAAG,IAA9B;AACA,MAAIE,MAAM,GAAG,EAAb;;AACA,OAAK,IAAMC,CAAX,IAAgBJ,IAAhB,EAAsB;AAClB,QAAMK,KAAK,GAAGC,QAAQ,CAACF,CAAD,CAAtB;;AACA,QAAIC,KAAK,IAAIL,IAAI,CAACO,MAAL,GAAc,CAA3B,EAA8B;AAC1B,UAAMC,WAAW,GAAGR,IAAI,CAACK,KAAD,CAAxB;AACA,UAAMI,QAAQ,GAAGT,IAAI,CAACK,KAAK,GAAG,CAAT,CAArB;AACA,UAAMK,SAAS,GAAGJ,QAAQ,CAACE,WAAW,CAACG,SAAb,CAA1B;AACA,UAAMC,OAAO,GAAGN,QAAQ,CAACG,QAAQ,CAACE,SAAV,CAAxB;AACA,UAAME,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAW,CAACH,OAAO,GAAGF,SAAX,IAAwBR,UAAnC,CAAnB;AACA,UAAMc,IAAI,GAAGV,QAAQ,CAACG,QAAQ,CAACQ,QAAT,CAAkBC,CAAnB,CAAR,GAAgCZ,QAAQ,CAACE,WAAW,CAACS,QAAZ,CAAqBC,CAAtB,CAArD;AACA,UAAMC,IAAI,GAAGb,QAAQ,CAACG,QAAQ,CAACQ,QAAT,CAAkBG,CAAnB,CAAR,GAAgCd,QAAQ,CAACE,WAAW,CAACS,QAAZ,CAAqBG,CAAtB,CAArD;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,UAApB,EAAgCQ,CAAC,EAAjC,EAAqC;AACjC,YAAMV,SAAS,GAAGG,IAAI,CAACC,KAAL,CAAYL,SAAS,GAAGR,UAAxB,IAAuCA,UAAvC,GAAoDmB,CAAC,GAAGnB,UAA1E;AACA,YAAMe,QAAQ,GAAG;AACbC,UAAAA,CAAC,EAAEZ,QAAQ,CAACE,WAAW,CAACS,QAAZ,CAAqBC,CAAtB,CAAR,GAAoCF,IAAI,GAAGH,UAAP,GAAoBQ,CAD9C;AAEbD,UAAAA,CAAC,EAAEd,QAAQ,CAACE,WAAW,CAACS,QAAZ,CAAqBG,CAAtB,CAAR,GAAoCD,IAAI,GAAGN,UAAP,GAAoBQ;AAF9C,SAAjB;AAIA,YAAMC,IAAI,GAAGxC,QAAQ,CAAC6B,SAAD,CAArB;;AAEA,YAAIA,SAAS,GAAGT,UAAZ,IAA0B,CAA9B,EAAiC;AAC7BC,UAAAA,MAAM,CAACoB,IAAP,CAAY;AACRZ,YAAAA,SAAS,EAATA,SADQ;AACGa,YAAAA,QAAQ,EAARA,QADH;AACaF,YAAAA,IAAI,EAAJA;AADb,WAAZ;AAIH;AACJ;AAEJ;AAEJ;;AACD3B,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BO,MAA7B;AACA,SAAOA,MAAP;AACH,CApCM","sourcesContent":["import { msToDate, msToTime } from \"./general_methods\";\r\n\r\nexport const convertChampList = (champions) => {\r\n    const champData = champions.data;\r\n    let array = []\r\n    for (const name in champData) {\r\n        const champ = champData[name];\r\n        const id = champ.key;\r\n        array[id] = champ;\r\n    }\r\n    return array;\r\n}\r\n\r\nexport const getPosition = (role, lane) => {\r\n    console.log(\"getPosition\", role, lane)\r\n    if (role == \"DUO_SUPPORT\") {\r\n        return \"Support\";\r\n    };\r\n    if (role == \"DUO_CARRY\") {\r\n        return \"ADC\";\r\n    }\r\n    switch (lane) {\r\n        case \"MID\":\r\n            return \"Mid\";\r\n        case \"MIDDLE\":\r\n            return \"Mid\";\r\n        case \"TOP\":\r\n            return \"Top\";\r\n        case \"JUNGLE\":\r\n            return \"JUNGLE \"\r\n        case \"BOTTOM\":\r\n            if (role == \"DUO_SUPPORT\") {\r\n                return \"Support\";\r\n            }\r\n            else if (role = \"DUO_CARRY\") {\r\n                return \"Bottom\"\r\n            }\r\n            return \"Bottom-lane\";\r\n        case \"NONE\":\r\n            return \"Support\";\r\n        default: return \"Unknown\";\r\n\r\n    }\r\n}\r\nexport const getType = (type) => {\r\n\r\n    switch (type) {\r\n        case 400:\r\n            return \"Draft Pick\";\r\n        case 420:\r\n            return \"Ranked solo\";\r\n        case 430:\r\n            return \"Blind Pick\";\r\n        case 440:\r\n            return \"Ranked flex\";\r\n        case 450:\r\n            return \"ARAM\";\r\n        case 700:\r\n            return \"Clash games\";\r\n        case 830:\r\n            return \"Co-op vs. AI Intro Bot\";\r\n        case 840:\r\n            return \"Co-op vs. AI Beginner Bot\";\r\n        case 850:\r\n            return \"Co-op vs. AI Intermediate Bot\";\r\n        case 900:\r\n            return \"URF\";\r\n        case 1300:\r\n            return \"Nexus Blitz\";\r\n\r\n\r\n\r\n        default: return \"Unknown\";\r\n\r\n    }\r\n}\r\n\r\nexport const convertTimelineList = (list) => {\r\n    console.log(\"list:\", list)\r\n    const interval = 10;//seconds\r\n    const msInterval = interval * 1000;\r\n    let result = []\r\n    for (const i in list) {\r\n        const index = parseInt(i);\r\n        if (index != list.length - 1) {\r\n            const currentItem = list[index];\r\n            const nextItem = list[index + 1];\r\n            const startTime = parseInt(currentItem.timestamp);\r\n            const endTime = parseInt(nextItem.timestamp);\r\n            const iterations = Math.floor((endTime - startTime) / msInterval);\r\n            const difX = parseInt(nextItem.position.x) - parseInt(currentItem.position.x);\r\n            const difY = parseInt(nextItem.position.y) - parseInt(currentItem.position.y);\r\n            for (let a = 0; a < iterations; a++) {\r\n                const timestamp = Math.floor((startTime / msInterval)) * msInterval + a * msInterval;\r\n                const position = {\r\n                    x: parseInt(currentItem.position.x) + (difX / iterations * a),\r\n                    y: parseInt(currentItem.position.y) + (difY / iterations * a),\r\n                }\r\n                const time = msToTime(timestamp);\r\n\r\n                if (timestamp % msInterval == 0) {\r\n                    result.push({\r\n                        timestamp, location, time\r\n                    }\r\n                    )\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n    console.log(\"resultinglist\", result);\r\n    return result;\r\n}"]},"metadata":{},"sourceType":"module"}