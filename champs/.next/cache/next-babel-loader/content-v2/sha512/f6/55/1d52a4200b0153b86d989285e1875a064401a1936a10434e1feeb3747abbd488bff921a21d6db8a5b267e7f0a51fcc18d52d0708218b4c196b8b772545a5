{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\moren\\\\OneDrive\\\\Documenten\\\\League of Legends\\\\Coding\\\\LOL-API\\\\pages\\\\index.js\";\nimport { useEffect, useState } from 'react';\nimport { Kayn, REGIONS } from 'kayn';\n\nconst getPosition = (role, lane) => {\n  switch (lane) {\n    case \"MID\":\n      return \"Mid\";\n\n    case \"TOP\":\n      return \"Top\";\n\n    case \"JUNGLE\":\n      return \"JUNGLE \";\n\n    case \"BOTTOM\":\n      return \"Bottom\";\n\n    case \"NONE\":\n      return \"Support\";\n  }\n};\n\nexport default function Home({\n  user,\n  accountID,\n  matches,\n  firstMatch,\n  firsttimeline,\n  champions\n}) {\n  const {\n    0: init,\n    1: setInit\n  } = useState(false);\n  const {\n    0: data,\n    1: setData\n  } = useState(null);\n  const {\n    0: champArray,\n    1: setChamparray\n  } = useState(null);\n  useEffect(() => {\n    if (!init) {\n      setInit(true);\n\n      if (champions) {\n        const champData = champions.data;\n        let array = [];\n\n        for (const name in champData) {\n          const champ = champData[name];\n          const id = champ.key;\n          array[id] = champ;\n        }\n\n        setChamparray(array);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"user:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(user, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"firstMatch:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"matchTable\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date header\",\n        children: \"Datum:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"champion header\",\n        children: \"Champion:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"position header\",\n        children: \"Position\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), (matches === null || matches === void 0 ? void 0 : matches.matches) && (matches === null || matches === void 0 ? void 0 : matches.matches.map((match, index) => {\n        console.log(match);\n        const matchDate = new Date(match === null || match === void 0 ? void 0 : match.timestamp);\n        var year = matchDate.getFullYear();\n        var month = matchDate.getMonth();\n        var date = matchDate.getDate();\n        var hour = matchDate.getHours();\n        var min = matchDate.getMinutes();\n        var sec = matchDate.getSeconds();\n        var time = date + '-' + month + '-' + year + '-' + hour + ':' + min + ':' + sec;\n        console.log(\"match\", match);\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date item\",\n            children: time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"champion item\",\n            children: champArray && champArray[match === null || match === void 0 ? void 0 : match.champion].id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"position item\",\n            children: getPosition(match.role, match.lane)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true);\n      }))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(matches, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"accountID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(accountID, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\nexport async function getServerSideProps(context) {\n  const riotAPI = \"RGAPI-b24d11af-219e-4c49-bda8-a4c174ac0e42\";\n  let myError = false;\n  const kayn = Kayn(riotAPI)({\n    region: REGIONS.EUROPE_WEST,\n    debugOptions: {\n      isEnabled: true,\n      showKey: false\n    }\n  });\n  const summoner = await kayn.Summoner.by.name('MlDget');\n  const summonerId = summoner.accountId;\n  const matchlist = await kayn.Matchlist.by.accountID(\"n2vnLxcc2x-DMoIhdm0WMuraVVCFFEW_MpkD2D5-uEXLHfs\").region(REGIONS.EUROPE_WEST).query({\n    // season: 9,\n    queue: [420, 440]\n  });\n  let firstMatch = null;\n  let firsttimeline = null;\n\n  if (matchlist !== null && matchlist !== void 0 && matchlist.matches) {\n    firstMatch = await kayn.Match.get(matchlist.matches[0].gameId);\n    firsttimeline = await kayn.Match.timeline(matchlist.matches[0].gameId);\n  }\n\n  const champions = await kayn.DDragon.Champion.list();\n  return {\n    props: {\n      user: summoner,\n      accountID: summonerId,\n      matches: matchlist,\n      firstMatch,\n      firsttimeline,\n      champions\n    } // will be passed to the page component as props\n\n  };\n}","map":{"version":3,"sources":["C:/Users/moren/OneDrive/Documenten/League of Legends/Coding/LOL-API/pages/index.js"],"names":["useEffect","useState","Kayn","REGIONS","getPosition","role","lane","Home","user","accountID","matches","firstMatch","firsttimeline","champions","init","setInit","data","setData","champArray","setChamparray","champData","array","name","champ","id","key","JSON","stringify","map","match","index","console","log","matchDate","Date","timestamp","year","getFullYear","month","getMonth","date","getDate","hour","getHours","min","getMinutes","sec","getSeconds","time","champion","getServerSideProps","context","riotAPI","myError","kayn","region","EUROPE_WEST","debugOptions","isEnabled","showKey","summoner","Summoner","by","summonerId","accountId","matchlist","Matchlist","query","queue","Match","get","gameId","timeline","DDragon","Champion","list","props"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport { Kayn, REGIONS } from 'kayn'\nconst getPosition = (role, lane) => {\n\n  switch (lane) {\n    case \"MID\":\n      return \"Mid\";\n    case \"TOP\":\n      return \"Top\";\n    case \"JUNGLE\":\n      return \"JUNGLE \"\n    case \"BOTTOM\":\n      return \"Bottom\";\n    case \"NONE\":\n      return \"Support\";\n\n  }\n}\n\n\nexport default function Home({ user, accountID, matches, firstMatch, firsttimeline, champions }) {\n  const [init, setInit] = useState(false);\n  const [data, setData] = useState(null);\n  const [champArray, setChamparray] = useState(null);\n  useEffect(() => {\n    if (!init) {\n      setInit(true);\n      if (champions) {\n        const champData = champions.data;\n        let array = []\n        for (const name in champData) {\n          const champ = champData[name];\n          const id = champ.key;\n          array[id] = champ;\n        }\n        setChamparray(array)\n      }\n    }\n  });\n\n  return (\n    <>\n\n      <h4>user:</h4>\n      <pre>{JSON.stringify(user, null, 2)}</pre>\n      <h4>firstMatch:</h4>\n      {/* <pre>{JSON.stringify(firstMatch,null, 2)}</pre>\n    <h4>firsttimeline:</h4>\n    <pre>{JSON.stringify(firsttimeline,null, 2)}</pre>\n    // <h4>matches</h4> */}\n      <div className=\"matchTable\">\n        <div className=\"date header\">\n          Datum:\n            </div>\n        <div className=\"champion header\">\n          Champion:\n        </div>\n        <div className=\"position header\">\n          Position\n        </div>\n\n        {matches?.matches && matches?.matches.map((match, index) => {\n          console.log(match);\n          const matchDate = new Date(match?.timestamp);\n          var year = matchDate.getFullYear();\n          var month = matchDate.getMonth();\n          var date = matchDate.getDate();\n          var hour = matchDate.getHours();\n          var min = matchDate.getMinutes();\n          var sec = matchDate.getSeconds();\n          var time = date + '-' + month + '-' + year + '-' + hour + ':' + min + ':' + sec;\n          console.log(\"match\", match);\n\n          return (<>\n            <div className=\"date item\">\n              {time}\n            </div>\n            <div className=\"champion item\">\n              {champArray && champArray[match?.champion].id}\n            </div>\n\n            <div className=\"position item\">\n              {getPosition(match.role, match.lane)}\n            </div>\n          </>\n          )\n\n        })}\n\n      </div>\n\n      <pre>{JSON.stringify(matches, null, 2)}</pre>\n      <h4>accountID</h4>\n      <pre>{JSON.stringify(accountID, null, 2)}</pre>\n\n    </>\n  )\n}\n\nexport async function getServerSideProps(context) {\n  const riotAPI = \"RGAPI-b24d11af-219e-4c49-bda8-a4c174ac0e42\";\n  let myError = false;\n  const kayn = Kayn(riotAPI)({\n    region: REGIONS.EUROPE_WEST,\n    debugOptions: {\n      isEnabled: true,\n      showKey: false,\n    },\n\n  })\n  const summoner = await kayn.Summoner.by.name('MlDget')\n  const summonerId = summoner.accountId;\n  const matchlist = await kayn.Matchlist.by.accountID(\"n2vnLxcc2x-DMoIhdm0WMuraVVCFFEW_MpkD2D5-uEXLHfs\")\n    .region(REGIONS.EUROPE_WEST)\n    .query({\n      // season: 9,\n      queue: [420, 440],\n    })\n  let firstMatch = null;\n  let firsttimeline = null;\n  if (matchlist?.matches) {\n    firstMatch = await kayn.Match.get(matchlist.matches[0].gameId);\n    firsttimeline = await kayn.Match.timeline(matchlist.matches[0].gameId);\n  }\n  const champions = await kayn.DDragon.Champion.list();\n  return {\n    props: { user: summoner, accountID: summonerId, matches: matchlist, firstMatch, firsttimeline, champions }, // will be passed to the page component as props\n  }\n}"]},"metadata":{},"sourceType":"module"}